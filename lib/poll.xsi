MODULE = UV             PACKAGE = UV::Poll      PREFIX = p5uv_poll_

PROTOTYPES: ENABLE

void p5uv_poll__init(SV *self, int fd, uv_loop_t *loop)
    INIT:
        uv_poll_t *handle;
        int ret;
        uv_os_sock_t sock;
    CODE:
        if (xs_object_magic_has_struct_rv(aTHX_ self)) croak("Can't re-initialie Poll");
        Newx(handle, 1, uv_poll_t);
        if (!handle) croak("Unable to allocate space for a poll");

        if (NULL == loop) loop = uv_default_loop();
        _MAKE_SOCK(sock, fd);

        ret = uv_poll_init_socket(loop, handle, sock);

        if (0 != ret) {
            Safefree(handle);
            croak("Couldn't initialize handle (%i): %s", ret, uv_strerror(ret));
        }
        xs_object_magic_attach_struct(aTHX_ SvRV(self), handle);
        handle->data = SvREFCNT_inc(ST(0));

int p5uv_poll__start(SV *self, int events=UV_READABLE)
    INIT:
        uv_poll_t *handle;
    CODE:
        handle = (uv_poll_t *)xs_object_magic_get_struct_rv_pretty(aTHX_ self, "uv_poll_t in _start");
        RETVAL = uv_poll_start(handle, events, handle_poll_cb);
    OUTPUT:
    RETVAL

int p5uv_poll_stop(SV *self)
    INIT:
        uv_poll_t *handle;
    CODE:
        handle = (uv_poll_t *)xs_object_magic_get_struct_rv_pretty(aTHX_ self, "uv_poll_t in stop");
        RETVAL = uv_poll_stop(handle);
    OUTPUT:
    RETVAL
